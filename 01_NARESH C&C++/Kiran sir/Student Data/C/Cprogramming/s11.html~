<html>
<table height="500" width="1000" border="1"><TR   height="5" width="1000"><strong><h2><center>C</center></h2></strong></TR>
<TR  valign="top"><TD align="left" width="100"><table><pre>

<pre>
<TR><a href="branching.html" target="_self"><strong>Decision making and branching</strong></a></TR><br>

<pre>
<TR><a href="loops.html" target="_self"><strong>Loops</strong></a></TR><br>


<pre>
<TR><a href="managing.html" target="_self"><strong>Managing input output functions</strong></a></TR><br>

<pre>
<TR><a href="functions.html" target="_self"><strong>Functions</strong></a></TR><br>

<pre>
<TR><a href="arrays.html" target="_self"><strong>Arrays</strong></a></TR><br>

<pre>
<TR><a href="strings.html" target="_self"><strong>Strings</strong></a></TR><br>

<pre>
<TR><a href="pointer.html" target="_self"><strong>pointers</strong></a></TR><br>

<pre>
<TR><a href="structures.html" target="_self"><strong>structures</strong></a></TR><br>

<pre>
<TR><a href="storageclasses.html" target="_self"><strong>Storage Classes</strong></a></TR><br>

<pre>
<TR><a href="preprocessor.html" target="_self"><strong>preprossesor</strong></a></TR><br>

<pre>
<TR><a href="filemgt.html" target="_self"><strong>File Management</strong></a></TR><br>

<pre>
<TR><a href="files1.html" target="_self"><strong>Random Access Files</strong></a></TR><br>
</table></TD>
<TD align="left"><pre>

<strong>Introduction to Strings:<strong></strong></strong>

       The way a group of integers can be stored in an integer array, similarly a group of 
characters can be stored in a character array . Character array are often called strings.
A string constant is a one-dimensional array of characters terminated by a null('\0').
The ASCII value of ('\0') is 0.

Each character in the array occupies one byte of memory and the last character is always'\0'.

The following example illustrates how a string is stored and accessed

main()
{
   static char name[]="Nagpur";
    int i=0;
    while (name[i]!='\0')
     {
       printf("%c",name[i]);
       i++;
     }
}

A string can also be initialized as 
           static char[]="Nagpur";

Here '\0' is not necessary . C inserts it automatically. The terminating null('\0') is 
important,because it is the only way the functions that work with a string can know where 
the string ends.

<strong>Declaring and Initializing string variables:</strong>

A string variable is any valid c variable name and is always declared as an array .
The general form of declaration of a string variable is:
                   char string_name [size];
The size determines the number of characters in the string_name.
The size should be equal to the maximum number of characters in the string plus one.
'C' permits a character array to be initialized in either of the following two forms
              static char city[9] = "Newyork";
              static char city[9] = {'N','E','W','Y','O','R','K','\0'};


<a href="s1.html" target="_self"><strong>BACK</strong></a><br><br>
</pre></TD>
</TR>

</table>


</html>
