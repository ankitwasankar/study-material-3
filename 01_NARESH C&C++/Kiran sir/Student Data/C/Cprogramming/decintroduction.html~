<html>
<head><TITLE></TITLE>
<!--<h6 align="center"><a href="decisionformat.html">BACK</a></h6></html>
</head>-->
<table height="500" width="1000" border="1"><TR   height="5" width="1000"><strong><h2><center>C</center></h2></strong></TR>
<TR valign="top"><TD align="left" width="100"><table><pre>

<pre>
<TR><a href="branching.html" target="_self"><strong>Decision making and branching</strong></a></TR><br>

<pre>
<TR><a href="loops.html" target="_self"><strong>Loops</strong></a></TR><br>


<pre>
<TR><a href="managing.html" target="_self"><strong>Managing input output functions</strong></a></TR><br>

<pre>
<TR><a href="functions.html" target="_self"><strong>Functions</strong></a></TR><br>

<pre>
<TR><a href="arrays.html" target="_self"><strong>Arrays</strong></a></TR><br>

<pre>
<TR><a href="strings.html" target="_self"><strong>Strings</strong></a></TR><br>

<pre>
<TR><a href="pointer.html" target="_self"><strong>pointers</strong></a></TR><br>

<pre>
<TR><a href="structures.html" target="_self"><strong>structures</strong></a></TR><br>

<pre>
<TR><a href="storageclasses.html" target="_self"><strong>Storage Classes</strong></a></TR><br>

<pre>
<TR><a href="preprocessor.html" target="_self"><strong>preprossesor</strong></a></TR><br>


<pre>
<TR><a href="filemgt.html" target="_self"><strong>File Management</strong></a></TR><br>

<tr>
<TR><a href="files.html" target="_self"><strong>Random Access Files</strong></a></TR><br>


</table></TD>
<TD align="left"><pre>


                              <strong>DECISION MAKING AND BRANCHING </strong>
<font size="4">
<strong>Introduction:</strong>   C Language must be able to perform different sets of 
actions depending on the circumstances. A C program is a set of statements which are 
normally executed sequentially n the order in which they appear. This happens when no
options or no repetitions of certain calculations are necessary. However,in practice, 
we have a number of situations   where wee may have to change the order of execution of 
statements based on certain conditions, pr repeat a group of statements until certain 
specified conditions are met. This involves a kind of decision making to see whether 
a particular condition has occurred or not and then direct the computer to execute 
certain statements accordingly. 

  C has 4 decision making instructions, They are:
  1. If -Else Statement 
  2. Switch Statement 
  3. Conditional Operator Statement 
  4. Goto Statement. 
 
<strong>The IF Statement:</strong> The IF Statement is a powerful decision making statement
 and is used to control the flow of execution of statements
 
The <strong>General form of IF statement<strong></strong></strong> is look like this: 

             <strong>if</strong>(This condition is true) 
                execute this statement; 

 	The keyword 'IF' tells the compiler that what follows is a decision
control instruction.The condition following the keyword 'If' is always enclosed
within a pair of Parenthesis.
It allows the computer to evaluate the expression first and then depending on whether the  value of the expression (relation or condition) is 'TRUE' (non-zero) or FALSE (zero), it transfers the control to a particular statement. This point of program has two paths to follow one for the TRUE condition and other is for FALSE condition.
As a general rule, we express a condition using 'C' relational operators, the following table 
shows how they are evaluated:

Hierarchy of operators: 

           Operator                       Type 
 
             !                        Logical NOT              
           *,/,%                      Arithmetic and Modulus 
           +, -                       Arithmetic 
          <>,<=,>=                    Relational           
           ==,!=                      Relational 
            &&                        Logical AND 
            ||                        Logical OR 
             =                        Assignment 

<strong>Demonstration of "IF" statement</strong>
<strong>Example:1</strong>
 
                main() 
                 { 
                   int num; 
                   printf("Enter a number less than 10"); 
                   scanf("%d",&num); 
                   if(num <= 10) 
                   printf(" How nice you are"); 
                 } 

<strong>Description: </strong>
     On execution of this program, if you type a number less than or equal to 10, 
you get a message on the screen through printf(). If you type some other number 
the program doesn't  do anything.</font>&nbsp;&nbsp;&nbsp;&nbsp;

<font size="5" style="URL Chancery" ><a href="branching.html">BACK</a></font>
</pre><td></tr></table>
</html>







