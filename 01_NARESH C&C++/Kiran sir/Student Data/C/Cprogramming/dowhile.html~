<html>
<table height="500" width="1000" border="1"><TR   height="5" width="1000"><strong><h2><center>C</center></h2></strong></TR>
<TR valign="top"><TD align="left" width="100"><table><pre>

<pre>
<TR><a href="branching.html" target="_self"><strong>Decision making and branching</strong></a></TR><br>

<pre>
<TR><a href="managing.html" target="_self"><strong>Managing input output functions</strong></a></TR><br>

<pre>
<TR><a href="functions.html" target="_self"><strong>Functions</strong></a></TR><br>

<pre>
<TR><a href="arrays.html" target="_self"><strong>Arrays</strong></a></TR><br>

<pre>
<TR><a href="strings.html" target="_self"><strong>Strings</strong></a></TR><br>

<pre>
<TR><a href="pointer.html" target="_self"><strong>pointers</strong></a></TR><br>

<pre>
<TR><a href="structures.html" target="_self"><strong>structures</strong></a></TR><br>

<pre>
<TR><a href="storageclasses.html" target="_self"><strong>Storage Classes</strong></a></TR><br>
<pre>
<TR><a href="preprocessor.html" target="_self"><strong>preprossesor</strong></a></TR><br>


<pre>
<TR><a href="filemgt.html" target="_self"><strong>File Management</strong></a></TR><br>

<pre>
<TR><a href="files1.html" target="_self"><strong>Random Access Files</strong></a></TR><br>

</table></TD>
<TD align="left"><pre>


<strong>Do-While:</strong>
	 
 	The while loop we studied just before makes a test condition before loop 
	 is executed. Therefore the body of loop may not be executed at all if the 
	 condition is not satisfied at the first attempt.On same occasions it 
	 might be necessary to execute body of the loop before test is performed 
	 Such conditions can be handled using do statement.This takes the form
		
		do
		 {
			body of the loop. 
		 }while(test-condition)

 Here the test-condition in the while  statement is evaluated at the end of the 
 loop is executed once if the test cndition is wrong.For first attempt otherwise 
 the program continues to evaluate the body of as long as condition is true.
 The do-while is an exit control loop.there fore the body of the loop is executed 
 at least once.

<strong> Example:</strong> 
Program to find sum of n numbers.

		#include 
		     main( )
		     {
                     	i=1;
			sum=0;
			do
			 {
			    sum=sum+i;
			    i=i+1;
			   }
			 while(sum<40 || i<10);
			printf	("%d%d\n",i,sum);
			}

   The loop will be executed as long as one of the two relations is true.
	

<a href="l1.html" target="_self"><strong>BACK</strong></a><br><br>
</pre></TD>
</table>
</html>