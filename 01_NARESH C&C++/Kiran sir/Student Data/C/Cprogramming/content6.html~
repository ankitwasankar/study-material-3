
<html>
<table height="500" width="1000" border="1"><TR   height="5" width="1000"><strong><h2><center>C</center></h2></strong></TR>
<TR valign="top"><TD align="left" width="100"><table><pre>

<pre>
<TR><a href="branching.html" target="_self"><strong>Decision making and branching</strong></a></TR><br>

<pre>
<TR><a href="loops.html" target="_self"><strong>Loops</strong></a></TR><br>


<pre>
<TR><a href="managing.html" target="_self"><strong>Managing input output functions</strong></a></TR><br>

<pre>
<TR><a href="functions.html" target="_self"><strong>Functions</strong></a></TR><br>

<pre>
<TR><a href="arrays.html" target="_self"><strong>Arrays</strong></a></TR><br>

<pre>
<TR><a href="strings.html" target="_self"><strong>Strings</strong></a></TR><br>

<pre>
<TR><a href="pointer.html" target="_self"><strong>pointers</strong></a></TR><br>

<pre>
<TR><a href="structures.html" target="_self"><strong>structures</strong></a></TR><br>

<pre>
<TR><a href="storageclasses.html" target="_self"><strong>Storage Classes</strong></a></TR><br>

<pre>
<TR><a href="preprocessor.html" target="_self"><strong>preprossesor</strong></a></TR><br>


<pre>
<TR><a href="filemgt.html" target="_self"><strong>File Management</strong></a></TR><br>

<pre>
<TR><a href="files.html" target="_self"><strong>Random Access Files</strong></a></TR><br>


</table></TD>
<TD align="left"><pre>


Inputting character strings: Single  character can be  read from the  terminal using the getchar function .The same can be achieved  using the scanf function also. In addition,a function can input strings containing more than one character. Following are the     specifications for reading character strings:
                            %ws   or  %wc
Program:  /* Reading of strings using %wc and %ws */ 
                                main()
                          {
                              int num;
                              char name1[15],name2[15],name3[15];
                              printf("enter serial number and name one \n");
                              scanf("%d %15c",&num,&name1);
                              printf("%d %15s\n\n",num,name1);  
                              printf("enter serial number and name two \n");
                              scanf("%d %s",&num,&name2);
                              printf("%d %15s\n\n",num,name2);
                              printf("enter serial number and name three \n");
                              scanf("%d %15s",&num,&name3);
                              printf("%d %15s\n\n",num,name3);
                        } 
Output:         enter serial number and name one
                               1          123456789012345
                               1          123456789012345r
                       enter serial number and name two
                                 2       New York
                                 2       New          
                      enter serial number and name three
                                 2        York
                      enter serial number and name one 
                                 1      123456789012
                                 1      123456789012  r
                      enter serial number and name two
                                 2        New-York
                                 2        New-York
                      enter serial number and name three
                                 3        London

     In the above program,the specification %s terminates reading at the encounter of a blank space. 
 Therefore ,name2 has  read only the first part of " New York" and the second part is automatically
 assigned to name3.However,during the second run,the string "New York" is correctly to name2.

<a href="managing.html" target="_self">BACK</a>
</pre></TD>
</pre>

</table>


</html>
	  